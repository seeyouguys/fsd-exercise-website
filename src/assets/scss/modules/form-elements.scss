//
// FIELDS
//

.field {
    width: 320px;
    height: 44px;
    padding: 0 15px;
    box-sizing: border-box;

    background: $color-bg;
    border: 1px solid rgba($color-shade, .25);
    border-radius: 4px;
    transition: border 100ms linear;

    font: 14px/24px $font-content;
    color: rgba($color-shade, .75);
    

    &:hover, &:focus {
        outline: none; // rm default chrome style for input:focus
        border-color: rgba($color-shade, .5);
    }

    &::placeholder {
        color: rgba($color-shade, .25);
    }
}

.subscribe {
    position: relative;
    &__arrow-btn {
        width: 44px;
        height: 44px;
        
        background-color: transparent;
        padding: 0;
        margin: 0;
        outline: none;
        border: none;
        
        @include text-color($color-gradient);
        position: absolute;
        left: calc(320px-44px);

        &:hover {
            opacity: .5;
        }
    }
}

//
// CONTROLS
//

// hide default and create custom checkbox,
// checkmark is just two rectangles one overlayering the other
.checkbox {
     // hide the browser's default checkbox
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;

    &-container {
        display: flex;
        margin-bottom: 9px;
    }
    
    // label text
    &-label {
        font: 14px/20px $font-content;
        
        &-wrap {
            color: rgba($color-shade, .5);
            margin-left: 10px;
            max-width: 236px
        }
        &_rich {
            color: rgba($color-shade, .75);
            font-weight: bold;
        }
    }
    &-info {
        font: 12px/14px $font-content;
        color: rgba($color-shade, .5);
        margin: 5px 0 0 0 ;
    }
    
    // custom checkbox
    &-custom { 
        position: relative;
        width: 20px;
        height: 20px;
        background-color: $color-bg;
        
        box-sizing: border-box;
        border: 1px solid rgba($color-shade, .25);
        border-radius: 4px;
    }
    
    // checkmark (white rectangle)
    &-custom::after, &-custom::before {
        content: '';
        display: block;
        background-color: $color-bg;
        
        width: 6px;
        height: 8px;
        transform: rotate(45deg);

        // values were picked up empirically
        position: absolute;
        top: 0.5px; // it needs to be a little bit higher
        left: 5.5px;
    }
    // checkmark (gradient rectangle)
    &-custom::before {
        display: none;
        top: 3.5px; 
        background: $color-gradient;
    }
    // "selector1 ~ selector2" takes all elems matching second selector
    // which are placed after the elems matching first one.
    &:checked {
        ~ .checkbox-custom {
            border-color: $color-primary;
        }

        ~ .checkbox-custom::before {
            display: block;
        }

        // if checbox needs to be toggle-styled
        ~ .toggle {
            border-color: $color-primary;
            
            &::after {
                left: 23px;
                background: $color-gradient;
            }
        }
    }
}

// toggle
// addition to checkbox
.toggle {
    display: inline-block;
    position: relative;
    height: 20px;
    width: 40px;
    
    box-sizing: border-box;
    border: 1px solid rgba($color-shade, .25);
    border-radius: 10px;

    // point inside the toggle
    &::after {
        content: '';
        display: block;
        width: 12px;
        height: 12px;

        position: absolute;
        top: 3px;
        left: 3px;
        transition: 70ms left ease-in;

        border-radius: 100%;
        background: rgba($color-shade, .25);
    }

    ~ .checkbox-label-wrap {
        color: rgba($color-shade, .75);
    }
}


// link-btn
// button or button-stylized link
.btn {    
    text-decoration: none;
    outline: none;
    border: none;

    font: bold 12px/44px $font-content;
    text-align: center;
    text-transform: uppercase;
    
    height: 44px;
    padding: 0 20px;    
    border-radius: 22px;
    display: inline-block;

    // add this class for lower-height button
    &_slim {
        height: 34px;
        line-height: 34px;
    }
    &_ghost.btn_slim {
        height: 30px;
        line-height: 30px;
    }

    // filled btn
    &_primary {
        background: $color-gradient;
        color: $color-bg;

        &:hover {
            opacity: .5;
        }
    }
    
    // text only btn
    &_text {
        padding: 0;
        background: none;
        @include text-color($color-gradient);
        &:hover {
            background: none;
            color: rgba($color-shade, .5);
        }
    }
    
    // text and gradient border button
    // border is an ::before element which has gradient background
    // and lays under the white button itself
    &_ghost {
        padding: 0px 18px;
        height: 40px;
        line-height: 40px;
        
        color: $color-primary;
        background: $color-bg;
        position: relative;

        // ro place the ::before under btn_ghost
        transform-style: preserve-3d;

        &::before {
            content: '';
            display: inline-block;

            transform: translateZ(-1px);
            
            background: $color-gradient;
            border-radius: 22px;
            
            position: absolute;
            top: -2px;
            bottom: -2px;
            left: -2px;
            right: -2px;
        }
        &:hover::before {
            opacity: .5;
        }
    }

    // wide (stratch to the parent's width) filled button-styled link with an icon
    &_big {
        position: relative;
        display: block;
        max-width: 320px;
    }
    
    // icon for btn_big
    &__icon {
        line-height: 44px;
        width: 44px;
        text-align: center;

        position: absolute;
        right: 0;

        color: $color-bg;
        user-select: none;
        cursor: pointer;
    }
}


// radio-group
.radio {
    // hide the browser's default radio
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;

    &-container {
        display: inline-flex;
    }
    
    // create custom one
    &-custom {
        position: relative;
        display: inline-block;
        width: 20px;
        height: 20px;
        
        box-sizing: border-box;
        border-radius: 100%;
        border: 1px solid rgba($color-shade, .25);
    }
    &:checked ~ &-custom{
        border-color: $color-primary;
    }

    // point inside radio
    &-custom::after {
        content: '';
        display: none;
        width: 12px;
        height: 12px;

        position: absolute;
        top: 3px;
        left: 3px;

        border-radius: 100%;
        background: $color-gradient;
    }
    &:checked ~ &-custom::after {
        display: block;
    }

    &-label {
        font: 14px/20px $font-content;
        &-wrap {
            display: inline-block;
            margin-left: 10px;
        }
    }
}

// expandable-list
// dropdown's header labeled to a hidden checkbox,
// so depending on it's 'checked' state, content block is flipping 
.exp-list {
    &__label {
        display: flex;
        font: bold 12px/24px $font-content;
        color: $color-shade;
        text-transform: uppercase;
        cursor: pointer;
    }

    &__icon {
        user-select: none;
        color: rgba($color-shade, .5);
        transition: transform 100ms linear;
        margin-left: 30px; 
    }

    &__checkbox {
        display: none;

        &:checked {
            ~ .exp-list__content {
                transform: rotateX(90deg);
                height: 0;
                min-height: 0;
            }

            ~ .exp-list__label .exp-list__icon {
                transform: rotateX(180deg)
            }
        }
    }
    &__content {
        position: relative;
        min-height: 40px; // animation looks stupid w/o min-height
        transition: transform 100ms ease-in, min-height 120ms ease-in;
        transform-origin: top;
    }
}

// bullet-list
.bullet-list {
    list-style: none;
    padding: 0;
    margin: 0;

    font: 14px/24px $font-content;
    color: rgba($color-shade, .75);

    & li {
        margin-bottom: 10px;

        &:last-child {
            margin-bottom: 0;
        }

        &::before {
            content: '';
            display: inline-block;
            width: 10px;
            height: 10px;
            margin-right: 11px;
            border-radius: 100%;
            background-color: rgba($color-shade, .25);
        }
    }
}
