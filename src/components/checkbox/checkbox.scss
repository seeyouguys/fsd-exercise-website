// hide default and create custom checkbox,
// checkmark is just two rectangles one overlayering the other
.checkbox {
    // hide the browser's default checkbox
   position: absolute;
   opacity: 0;
   cursor: pointer;
   height: 0;
   width: 0;

   &-container {
       display: flex;
       margin-bottom: 9px;
   }
   
   // label text
   &-label {
       font: 14px/20px $font-content;
       
       &-wrap {
           color: rgba($color-shade, .5);
           margin-left: 10px;
           max-width: 236px
       }
       &_rich {
           color: rgba($color-shade, .75);
           font-weight: bold;
       }
   }
   &-info {
       font: 12px/14px $font-content;
       color: rgba($color-shade, .5);
       margin: 5px 0 0 0 ;
   }
   
   // custom checkbox
   &-custom { 
       position: relative;
       width: 20px;
       height: 20px;
       background-color: $color-bg;
       
       box-sizing: border-box;
       border: 1px solid rgba($color-shade, .25);
       border-radius: 4px;
   }
   
   // checkmark (white rectangle)
   &-custom::after, &-custom::before {
       content: '';
       display: block;
       background-color: $color-bg;
       
       width: 6px;
       height: 8px;
       transform: rotate(45deg);

       // values were picked up empirically
       position: absolute;
       top: 0.5px; // it needs to be a little bit higher
       left: 5.5px;
   }
   // checkmark (gradient rectangle)
   &-custom::before {
       display: none;
       top: 3.5px; 
       background: $color-gradient;
   }
   // "selector1 ~ selector2" takes all elems matching second selector
   // which are placed after the elems matching the first one.
   &:checked {
       ~ .checkbox-custom {
           border-color: $color-primary;
       }

       ~ .checkbox-custom::before {
           display: block;
       }

       // if checbox needs to be toggle-styled
       ~ .toggle {
           border-color: $color-primary;
           
           &::after {
               left: 23px;
               background: $color-gradient;
           }
       }
   }
}

// toggle
// addition to checkbox
.toggle {
    display: inline-block;
    position: relative;
    height: 20px;
    width: 40px;
    
    box-sizing: border-box;
    border: 1px solid rgba($color-shade, .25);
    border-radius: 10px;

    // point inside the toggle
    &::after {
        content: '';
        display: block;
        width: 12px;
        height: 12px;

        position: absolute;
        top: 3px;
        left: 3px;
        transition: 70ms left ease-in;

        border-radius: 100%;
        background: rgba($color-shade, .25);
    }

    ~ .checkbox-label-wrap {
        color: rgba($color-shade, .75);
    }
}